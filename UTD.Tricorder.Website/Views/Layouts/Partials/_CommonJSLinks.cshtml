@model CommonJSLinksViewModel
@{
    if (UIText.AngularJsLocales == null)
    {
        // Use notepad++ and file in file and some string replacement to create the list
        UIText.AngularJsLocales = new List<string>(new string[] { "af-na", "af-za", "af", "am-et", "am", "ar-001", "ar-ae", "ar-bh", "ar-dz", "ar-eg", "ar-iq", "ar-jo", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-om", "ar-qa", "ar-sa", "ar-sd", "ar-sy", "ar-tn", "ar-ye", "ar", "bg-bg", "bg", "bn-bd", "bn-in", "bn", "ca-ad", "ca-es", "ca", "cs-cz", "cs", "da-dk", "da", "de-at", "de-be", "de-ch", "de-de", "de-li", "de-lu", "de", "el-cy", "el-gr", "el", "en-as", "en-au", "en-bb", "en-be", "en-bm", "en-bw", "en-bz", "en-ca", "en-dsrt-us", "en-dsrt", "en-fm", "en-gb", "en-gu", "en-gy", "en-hk", "en-ie", "en-in", "en-iso", "en-jm", "en-mh", "en-mp", "en-mt", "en-mu", "en-na", "en-nz", "en-ph", "en-pk", "en-pr", "en-pw", "en-sg", "en-tc", "en-tt", "en-um", "en-us", "en-vg", "en-vi", "en-za", "en-zw", "en", "es-419", "es-ar", "es-bo", "es-cl", "es-co", "es-cr", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "es", "et-ee", "et", "eu-es", "eu", "fa-af", "fa-ir", "fa", "fi-fi", "fi", "fil-ph", "fil", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-km", "fr-lu", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-ne", "fr-re", "fr-rw", "fr-sn", "fr-td", "fr-tg", "fr-yt", "fr", "gl-es", "gl", "gsw-ch", "gsw", "gu-in", "gu", "he-il", "he", "hi-in", "hi", "hr-hr", "hr", "hu-hu", "hu", "id-id", "id", "in", "is-is", "is", "it-ch", "it-it", "it-sm", "it", "iw", "ja-jp", "ja", "kn-in", "kn", "ko-kr", "ko", "ln-cd", "ln-cg", "ln", "lt-lt", "lt", "lv-lv", "lv", "ml-in", "ml", "mr-in", "mr", "ms-bn", "ms-my", "ms", "mt-mt", "mt", "nl-aw", "nl-be", "nl-cw", "nl-nl", "nl-sx", "nl", "no", "or-in", "or", "pl-pl", "pl", "pt-ao", "pt-br", "pt-gw", "pt-mz", "pt-pt", "pt-st", "pt", "ro-md", "ro-ro", "ro", "ru-md", "ru-ru", "ru-ua", "ru", "sk-sk", "sk", "sl-si", "sl", "sq-al", "sq", "sr-cyrl-ba", "sr-cyrl-me", "sr-cyrl-rs", "sr-cyrl", "sr-latn-ba", "sr-latn-me", "sr-latn-rs", "sr-latn", "sr", "sv-fi", "sv-se", "sv", "sw-ke", "sw-tz", "sw", "ta-in", "ta-lk", "ta", "te-in", "te", "th-th", "th", "tl", "tr-tr", "tr", "uk-ua", "uk", "ur-in", "ur-pk", "ur", "vi-vn", "vi", "zh-cn", "zh-hans-cn", "zh-hans-hk", "zh-hans-mo", "zh-hans-sg", "zh-hans", "zh-hant-hk", "zh-hant-mo", "zh-hant-tw", "zh-hant", "zh-hk", "zh-tw", "zh", "zu-za", "zu" });
    }

    if (UIText.BootStrapValidatorLocales == null)
    {
        UIText.BootStrapValidatorLocales = new List<string>(new string[] { "ar-ma", "ar", "be-fr", "be-nl", "be", "bg-bg", "bg", "cs-cz", "cs", "da-dk", "da", "de-de", "de", "en-us", "en", "es-cl", "es-es", "es", "fa-ir", "fa", "fr-fr", "fr", "gr-el", "gr", "hu-hu", "hu", "id-id", "id", "it-it", "it", "ja-jp", "ja", "nl-nl", "nl", "no-no", "no", "pl-pl", "pl", "pt-br", "pt", "ro-ro", "ro", "ru-ru", "ru", "sr-rs", "sr", "sv-se", "sv", "th-th", "th", "tr-tr", "tr", "ua-ua", "ua", "vi-vn", "vi", "zh-cn", "zh-tw", "zh" });
    }

}

@*@Scripts.Render("~/Scripts/cordova/cordova.js")*@


@Scripts.Render("~/jsbundles/framework")


@Scripts.Render("~/jsbundles/bootstrap")
@Url.Geti18nScriptTag("Scripts/bootstrapvalidator-dist-0.5.0/dist/js/language/{0}.js", UIText.BootStrapValidatorLocales)

@Scripts.Render("~/jsbundles/angularjs")
@Url.Geti18nScriptTag("Scripts/angularjs/i18n/angular-locale_{0}.js", UIText.AngularJsLocales)



<!-- Load app main script -->
<script src="@(Url.GetCulturalUrl("js/stringmsgs_js?v=1"))"></script>


@Scripts.Render("~/jsbundles/appcommon")


@Scripts.Render("~/jsbundles/uicomponents")



@if (Model.IsDashboard == false)
{
    @* fileupload Developer Note: Since we don't have any public upload, references here are not complete. This is only to prevent Angular Exception *@
    @* TODO: make a separate app.js for public website (it adds developement costs so, it is avoided by now)*@
    @*@Scripts.Render("~/Scripts/jquery-fileupload/jquery.fileupload-angular.js")*@
}

@Scripts.Render("~/jsbundles/startup")


@* ----------------------------- Dashboard Scripts ----------------------------- *@


@if (Model.IsDashboard == true)
{
    <!-- Entity controlllers -->
    @Scripts.Render("~/jsbundles/entitycontrollers")
}


@if (FWHtml.IsDebug())
{
    @Scripts.Render("~/app/controllers/entityControllerDebug.js")
}

@* Mobile App *@
@if (Model.RenderAirBridge == true)
{
<!-- Mobile client needs to access login page -->
    @Scripts.Render("~/app/mobile/airSimpleBridge.js")
}

@Scripts.Render("~/app/mobile/mobileApp.js")


@if (Model.RenderSignalR == true)
{
<!-- SignalR-->
    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/app/signalr_mainhub.js"></script>
}

@if (Model.RenderWebRtc == true)
{ <!-- WebRTC connection manager-->
    @*@Scripts.Render("~/jsbundles/webrtc")*@
}


@if (Model.RenderVoiceCommand == true)
{
<!-- voice command -->
    @Scripts.Render("~/jsbundles/voicecommand")
}

@if (Model.IsDashboard == true)
{
<!-- special components -->
    @Scripts.Render("~/jsbundles/specialcomponents")

    @Scripts.Render("~/jsbundles/deltacompress")
}
